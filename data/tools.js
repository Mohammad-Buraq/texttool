/* Registry for 100 tools with SEO + Tool‑specific long descriptions */
import dynamic from 'next/dynamic';
import {
  Braces,
  CaseLower,
  CaseUpper,
  Filter,
  Link,
  ListOrdered,
  Sigma,
  TextQuote,
  Type,
  Wand2
} from 'lucide-react';

/* ----------------- Helpers ----------------- */
const defaultFaqs = (name) => ([
  { q: `Is ${name} free?`, a: `${name} runs entirely in your browser and is free to use.` },
  { q: `Do you store my text?`, a: "No. We never upload or store your text." }
]);

const addFaqs = (name, extras = []) => ([
  ...defaultFaqs(name),
  ...extras
]);

const R = ({ slug, name, description, component, tags = [], Icon = Wand2, seoTitle, seoDescription, Long, faqs }) => ({ 
  slug, name, description, tags, Icon, component, seoTitle, seoDescription, Long, faqs: faqs && faqs.length ? faqs : defaultFaqs(name)
});

/* ------- Long description factory (tool‑specific bullets supported) ------- */
const makeLong = (name, summary, features = [], steps = ['Paste your text', 'Adjust options', 'Copy or download'], uses = []) => () => (
  <>
    <h2>{`About ${name}`}</h2>
    <p>{summary}</p>
    <h3>Key features</h3>
    <ul>
      {(features && features.length ? features : ['100% browser-based, privacy-first','Copy / Download / Clear toolbar','Handles multi‑MB inputs']).map((f,i)=>(<li key={i}>{f}</li>))}
    </ul>
    <h3>How to use</h3>
    <ol>{steps.map((s,i)=>(<li key={i}>{s}</li>))}</ol>
    <h3>Common uses</h3>
    <ul>{(uses && uses.length ? uses : ['General text processing','Scripting workflows','Everyday editing']).map((u,i)=>(<li key={i}>{u}</li>))}</ul>
  </>
);

/* ----------------- Registry (100 tools) ----------------- */
const registry = [
  R({
    slug: 'remove-duplicate-lines',
    name: 'Remove Duplicate Lines',
    description: 'Dedupe lines (keep first/last, case sensitivity).',
    component: dynamic(() => import('../components/tools/remove-duplicate-lines')),
    tags: ["clean", "lines", "dedupe"],
    Icon: ListOrdered,
    seoTitle: 'Remove Duplicate Lines — Online',
    seoDescription: 'Dedupe lines (keep first/last, case sensitivity). Runs fully in your browser — free and private.',
    Long: makeLong('Remove Duplicate Lines','Dedupe lines (keep first/last, case sensitivity).', ["Keep first or last duplicate", "Case-sensitive toggle", "Stable ordering for kept items"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'remove-empty-lines',
    name: 'Remove Empty Lines',
    description: 'Delete blank/whitespace-only lines.',
    component: dynamic(() => import('../components/tools/remove-empty-lines')),
    tags: ["clean", "lines"],
    Icon: Filter,
    seoTitle: 'Remove Empty Lines — Online',
    seoDescription: 'Delete blank/whitespace-only lines. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Empty Lines','Delete blank/whitespace-only lines.', ["Removes blank & whitespace-only lines", "Keeps original line order", "Handles LF/CRLF line endings"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'sort-lines',
    name: 'Sort Lines',
    description: 'Sort lines A→Z / Z→A; case sensitivity toggle.',
    component: dynamic(() => import('../components/tools/sort-lines')),
    tags: ["lines", "sort"],
    Icon: ListOrdered,
    seoTitle: 'Sort Lines — Online',
    seoDescription: 'Sort lines A→Z / Z→A; case sensitivity toggle. Runs fully in your browser — free and private.',
    Long: makeLong('Sort Lines','Sort lines A→Z / Z→A; case sensitivity toggle.', ["A\u2192Z or Z\u2192A ordering", "Optionally case-insensitive", "Locale-aware compare"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'add-line-numbers',
    name: 'Add Line Numbers',
    description: 'Prefix lines with padded numbering.',
    component: dynamic(() => import('../components/tools/add-line-numbers')),
    tags: ["lines", "format"],
    Icon: ListOrdered,
    seoTitle: 'Add Line Numbers — Online',
    seoDescription: 'Prefix lines with padded numbering. Runs fully in your browser — free and private.',
    Long: makeLong('Add Line Numbers','Prefix lines with padded numbering.', ["Add custom prefix/suffix", "Works with blank lines too", "No changes inside line text"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'uppercase',
    name: 'Uppercase',
    description: 'Convert text to UPPERCASE.',
    component: dynamic(() => import('../components/tools/uppercase')),
    tags: ["case"],
    Icon: CaseUpper,
    seoTitle: 'Uppercase — Online',
    seoDescription: 'Convert text to UPPERCASE. Runs fully in your browser — free and private.',
    Long: makeLong('Uppercase','Convert text to UPPERCASE.', ["Unicode-aware case conversion", "Leaves numbers & symbols unchanged", "Fast for multi\u2011MB inputs"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'lowercase',
    name: 'Lowercase',
    description: 'Convert text to lowercase.',
    component: dynamic(() => import('../components/tools/lowercase')),
    tags: ["case"],
    Icon: CaseLower,
    seoTitle: 'Lowercase — Online',
    seoDescription: 'Convert text to lowercase. Runs fully in your browser — free and private.',
    Long: makeLong('Lowercase','Convert text to lowercase.', ["Unicode-aware case conversion", "Leaves numbers & symbols unchanged", "Fast for multi\u2011MB inputs"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'title-case',
    name: 'Title Case',
    description: 'Smart title casing with small-word handling.',
    component: dynamic(() => import('../components/tools/title-case')),
    tags: ["case"],
    Icon: Type,
    seoTitle: 'Title Case — Online',
    seoDescription: 'Smart title casing with small-word handling. Runs fully in your browser — free and private.',
    Long: makeLong('Title Case','Smart title casing with small-word handling.', ["Skips small words mid-title", "Always capitalizes first/last", "Preserves existing acronyms"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'sentence-case',
    name: 'Sentence Case',
    description: 'Capitalize the first letter of sentences.',
    component: dynamic(() => import('../components/tools/sentence-case')),
    tags: ["case"],
    Icon: Type,
    seoTitle: 'Sentence Case — Online',
    seoDescription: 'Capitalize the first letter of sentences. Runs fully in your browser — free and private.',
    Long: makeLong('Sentence Case','Capitalize the first letter of sentences.', ["Detects . ? ! boundaries", "Leaves non-leading words lowercased", "Respects abbreviations in common cases"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'slugify',
    name: 'Slugify',
    description: 'Create clean URL slugs from text.',
    component: dynamic(() => import('../components/tools/slugify')),
    tags: ["case", "slug"],
    Icon: Link,
    seoTitle: 'Slugify — Online',
    seoDescription: 'Create clean URL slugs from text. Runs fully in your browser — free and private.',
    Long: makeLong('Slugify','Create clean URL slugs from text.', ["Removes accents & symbols", "Converts spaces to dashes", "Lowercase, URL-safe output"], ['Paste your text','Adjust options','Copy or download'], ["URLs & SEO", "File names", "Permalinks"]),
  }),
  R({
    slug: 'remove-punctuation',
    name: 'Remove Punctuation',
    description: 'Strip punctuation and symbols safely.',
    component: dynamic(() => import('../components/tools/remove-punctuation')),
    tags: ["clean"],
    Icon: TextQuote,
    seoTitle: 'Remove Punctuation — Online',
    seoDescription: 'Strip punctuation and symbols safely. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Punctuation','Strip punctuation and symbols safely.', ["Removes punctuation safely", "Keeps letters, digits & spaces", "Configurable characters to keep"], ['Paste your text','Adjust options','Copy or download'], ["Preprocessing for analysis", "Removing noise", "Export to plain text"]),
  }),
  R({
    slug: 'remove-numbers',
    name: 'Remove Numbers',
    description: 'Delete digits (option to keep digits inside words).',
    component: dynamic(() => import('../components/tools/remove-numbers')),
    tags: ["clean"],
    Icon: Filter,
    seoTitle: 'Remove Numbers — Online',
    seoDescription: 'Delete digits (option to keep digits inside words). Runs fully in your browser — free and private.',
    Long: makeLong('Remove Numbers','Delete digits (option to keep digits inside words).', ["Removes punctuation safely", "Keeps letters, digits & spaces", "Configurable characters to keep"], ['Paste your text','Adjust options','Copy or download'], ["Preprocessing for analysis", "Removing noise", "Export to plain text"]),
  }),
  R({
    slug: 'line-counter',
    name: 'Line Counter',
    description: 'Count total and non-empty lines.',
    component: dynamic(() => import('../components/tools/line-counter')),
    tags: ["count", "lines"],
    Icon: Sigma,
    seoTitle: 'Line Counter — Online',
    seoDescription: 'Count total and non-empty lines. Runs fully in your browser — free and private.',
    Long: makeLong('Line Counter','Count total and non-empty lines.', ["Counts total & non-empty lines", "Handles CRLF & LF automatically", "Great for logs & transcripts"], ['Paste your text','Adjust options','Copy or download'], ["Editorial estimates", "Analytics prep", "QA checks"]),
  }),
  R({
    slug: 'word-frequency',
    name: 'Word Frequency',
    description: 'List words by frequency; stopwords toggle.',
    component: dynamic(() => import('../components/tools/word-frequency')),
    tags: ["count", "analyze"],
    Icon: Sigma,
    seoTitle: 'Word Frequency — Online',
    seoDescription: 'List words by frequency; stopwords toggle. Runs fully in your browser — free and private.',
    Long: makeLong('Word Frequency','List words by frequency; stopwords toggle.', ["Lowercases & tokenizes words", "Optional stopword removal", "Sorted by frequency"], ['Paste your text','Adjust options','Copy or download'], ["Editorial estimates", "Analytics prep", "QA checks"]),
  }),
  R({
    slug: 'url-encode-decode',
    name: 'URL Encode/Decode',
    description: 'Encode or decode URL strings safely.',
    component: dynamic(() => import('../components/tools/url-encode-decode')),
    tags: ["encode"],
    Icon: Link,
    seoTitle: 'URL Encode/Decode — Online',
    seoDescription: 'Encode or decode URL strings safely. Runs fully in your browser — free and private.',
    Long: makeLong('URL Encode/Decode','Encode or decode URL strings safely.', ["Percent-encode spaces & symbols", "Decode to original text", "Prevents double-encoding"], ['Paste your text','Adjust options','Copy or download'], ["Web-safe transport", "Embedding in configs", "Basic interoperability"]),
  }),
  R({
    slug: 'base64-encode-decode',
    name: 'Base64 Encode/Decode',
    description: 'Convert to/from Base64 (Unicode-safe).',
    component: dynamic(() => import('../components/tools/base64-encode-decode')),
    tags: ["encode"],
    Icon: Braces,
    seoTitle: 'Base64 Encode/Decode — Online',
    seoDescription: 'Convert to/from Base64 (Unicode-safe). Runs fully in your browser — free and private.',
    Long: makeLong('Base64 Encode/Decode','Convert to/from Base64 (Unicode-safe).', ["Encode/decode text safely", "Full Unicode support", "No server roundtrips"], ['Paste your text','Adjust options','Copy or download'], ["Web-safe transport", "Embedding in configs", "Basic interoperability"]),
  }),
  R({
    slug: 'strip-html-tags',
    name: 'Strip HTML Tags',
    description: 'Remove HTML tags; optional link conversion.',
    component: dynamic(() => import('../components/tools/strip-html-tags')),
    tags: ["clean", "html"],
    Icon: Braces,
    seoTitle: 'Strip HTML Tags — Online',
    seoDescription: 'Remove HTML tags; optional link conversion. Runs fully in your browser — free and private.',
    Long: makeLong('Strip HTML Tags','Remove HTML tags; optional link conversion.', ["Strips tags & attributes", "Optional link as (text \u2014 URL)", "Basic sanitizer for snippets"], ['Paste your text','Adjust options','Copy or download'], ["CMS copy/paste", "Email to plain text", "Snippet cleanup"]),
  }),
  R({
    slug: 'remove-line-breaks',
    name: 'Remove Line Breaks',
    description: 'Join lines with a custom separator.',
    component: dynamic(() => import('../components/tools/remove-line-breaks')),
    tags: ["clean", "lines"],
    Icon: Filter,
    seoTitle: 'Remove Line Breaks — Online',
    seoDescription: 'Join lines with a custom separator. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Line Breaks','Join lines with a custom separator.', ["Join with any separator", "Preserve paragraph blank lines", "Great for list building"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'remove-extra-spaces',
    name: 'Remove Extra Spaces',
    description: 'Trim and collapse extra whitespace.',
    component: dynamic(() => import('../components/tools/remove-extra-spaces')),
    tags: ["clean", "spaces"],
    Icon: Filter,
    seoTitle: 'Remove Extra Spaces — Online',
    seoDescription: 'Trim and collapse extra whitespace. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Extra Spaces','Trim and collapse extra whitespace.', ["Trim edges & collapse spaces", "Leaves tabs/newlines intact", "Normalizes pasted content"], ['Paste your text','Adjust options','Copy or download'], ["Normalize paste", "Before diffs", "CSV prep"]),
  }),
  R({
    slug: 'wrap-unwrap-lines',
    name: 'Wrap / Unwrap Lines',
    description: 'Wrap text to a width or unwrap line breaks. Keep paragraph gaps.',
    component: dynamic(() => import('../components/tools/wrap-unwrap-lines')),
    tags: ["lines", "format", "wrap", "unwrap"],
    Icon: ListOrdered,
    seoTitle: 'Wrap / Unwrap Lines — Online',
    seoDescription: 'Wrap text to a width or unwrap line breaks. Keep paragraph gaps. Runs fully in your browser — free and private.',
    Long: makeLong('Wrap / Unwrap Lines','Wrap text to a width or unwrap line breaks. Keep paragraph gaps.', ["Word-aware or strict width", "Preserves paragraph gaps", "Configurable column width"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'word-char-sentence-paragraph-counter',
    name: 'Word / Char / Sentence / Paragraph Counter',
    description: 'Live counts with reading time and averages.',
    component: dynamic(() => import('../components/tools/word-char-sentence-paragraph-counter')),
    tags: ["count", "analyze", "stats"],
    Icon: Sigma,
    seoTitle: 'Word / Char / Sentence / Paragraph Counter — Online',
    seoDescription: 'Live counts with reading time and averages. Runs fully in your browser — free and private.',
    Long: makeLong('Word / Char / Sentence / Paragraph Counter','Live counts with reading time and averages.', ["Words, chars, sentences, paragraphs", "Average word length", "Reading time estimate"], ['Paste your text','Adjust options','Copy or download'], ["Editorial estimates", "Analytics prep", "QA checks"]),
  }),
  R({
    slug: 'reverse-text',
    name: 'Reverse Text',
    description: 'Reverse the full text string.',
    component: dynamic(() => import('../components/tools/reverse-text')),
    tags: ["transform"],
    Icon: Wand2,
    seoTitle: 'Reverse Text — Online',
    seoDescription: 'Reverse the full text string. Runs fully in your browser — free and private.',
    Long: makeLong('Reverse Text','Reverse the full text string.', ["Reverse characters as-is", "Works with emoji & accents", "Keeps spacing unchanged"], ['Paste your text','Adjust options','Copy or download'], ["Fun/puzzles", "Quick checks", "String utilities"]),
  }),
  R({
    slug: 'reverse-lines',
    name: 'Reverse Lines',
    description: 'Reverse the order of lines.',
    component: dynamic(() => import('../components/tools/reverse-lines')),
    tags: ["lines", "transform"],
    Icon: ListOrdered,
    seoTitle: 'Reverse Lines — Online',
    seoDescription: 'Reverse the order of lines. Runs fully in your browser — free and private.',
    Long: makeLong('Reverse Lines','Reverse the order of lines.', ["Reverse only the order of lines", "Content of lines untouched", "Great for logs & lists"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'shuffle-lines',
    name: 'Shuffle Lines',
    description: 'Randomize line order (Fisher–Yates).',
    component: dynamic(() => import('../components/tools/shuffle-lines')),
    tags: ["lines", "randomize"],
    Icon: ListOrdered,
    seoTitle: 'Shuffle Lines — Online',
    seoDescription: 'Randomize line order (Fisher–Yates). Runs fully in your browser — free and private.',
    Long: makeLong('Shuffle Lines','Randomize line order (Fisher–Yates).', ["Unbiased Fisher\u2013Yates shuffle", "No repetition when picking", "Deterministic with same seed (future option)"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'random-line-picker',
    name: 'Random Line Picker',
    description: 'Pick one or more random lines.',
    component: dynamic(() => import('../components/tools/random-line-picker')),
    tags: ["lines", "randomize", "pick"],
    Icon: Wand2,
    seoTitle: 'Random Line Picker — Online',
    seoDescription: 'Pick one or more random lines. Runs fully in your browser — free and private.',
    Long: makeLong('Random Line Picker','Pick one or more random lines.', ["Unbiased Fisher\u2013Yates shuffle", "No repetition when picking", "Deterministic with same seed (future option)"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'dedent-text',
    name: 'Dedent Text',
    description: 'Remove common leading indentation.',
    component: dynamic(() => import('../components/tools/dedent-text')),
    tags: ["indent", "format"],
    Icon: ListOrdered,
    seoTitle: 'Dedent Text — Online',
    seoDescription: 'Remove common leading indentation. Runs fully in your browser — free and private.',
    Long: makeLong('Dedent Text','Remove common leading indentation.', ["Add or remove leading spaces/tabs", "Consistent indentation width", "Ignores empty lines for min calc"], ['Paste your text','Adjust options','Copy or download'], ["Code snippets", "Markdown quoting", "Formatting"]),
  }),
  R({
    slug: 'indent-text',
    name: 'Indent Text',
    description: 'Indent each line by spaces or tabs.',
    component: dynamic(() => import('../components/tools/indent-text')),
    tags: ["indent", "format", "lines"],
    Icon: ListOrdered,
    seoTitle: 'Indent Text — Online',
    seoDescription: 'Indent each line by spaces or tabs. Runs fully in your browser — free and private.',
    Long: makeLong('Indent Text','Indent each line by spaces or tabs.', ["Add or remove leading spaces/tabs", "Consistent indentation width", "Ignores empty lines for min calc"], ['Paste your text','Adjust options','Copy or download'], ["Code snippets", "Markdown quoting", "Formatting"]),
  }),
  R({
    slug: 'prefix-lines',
    name: 'Prefix Lines',
    description: 'Add a prefix to each line.',
    component: dynamic(() => import('../components/tools/prefix-lines')),
    tags: ["lines", "format"],
    Icon: ListOrdered,
    seoTitle: 'Prefix Lines — Online',
    seoDescription: 'Add a prefix to each line. Runs fully in your browser — free and private.',
    Long: makeLong('Prefix Lines','Add a prefix to each line.', ["Add custom prefix/suffix", "Works with blank lines too", "No changes inside line text"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'suffix-lines',
    name: 'Suffix Lines',
    description: 'Add a suffix to each line.',
    component: dynamic(() => import('../components/tools/suffix-lines')),
    tags: ["lines", "format"],
    Icon: ListOrdered,
    seoTitle: 'Suffix Lines — Online',
    seoDescription: 'Add a suffix to each line. Runs fully in your browser — free and private.',
    Long: makeLong('Suffix Lines','Add a suffix to each line.', ["Add custom prefix/suffix", "Works with blank lines too", "No changes inside line text"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'trim-whitespace',
    name: 'Trim Whitespace',
    description: 'Trim leading/trailing whitespace.',
    component: dynamic(() => import('../components/tools/trim-whitespace')),
    tags: ["clean", "spaces"],
    Icon: Filter,
    seoTitle: 'Trim Whitespace — Online',
    seoDescription: 'Trim leading/trailing whitespace. Runs fully in your browser — free and private.',
    Long: makeLong('Trim Whitespace','Trim leading/trailing whitespace.', ["Trim edges & collapse spaces", "Leaves tabs/newlines intact", "Normalizes pasted content"], ['Paste your text','Adjust options','Copy or download'], ["Normalize paste", "Before diffs", "CSV prep"]),
  }),
  R({
    slug: 'trim-each-line',
    name: 'Trim Each Line',
    description: 'Trim spaces from every line.',
    component: dynamic(() => import('../components/tools/trim-each-line')),
    tags: ["clean", "lines", "spaces"],
    Icon: Filter,
    seoTitle: 'Trim Each Line — Online',
    seoDescription: 'Trim spaces from every line. Runs fully in your browser — free and private.',
    Long: makeLong('Trim Each Line','Trim spaces from every line.', ["Trim each line individually", "Keeps blank lines blank", "Does not collapse inner spaces"], ['Paste your text','Adjust options','Copy or download'], ["Normalize paste", "Before diffs", "CSV prep"]),
  }),
  R({
    slug: 'remove-duplicate-words',
    name: 'Remove Duplicate Words',
    description: 'Remove repeated words, keeping first occurrence.',
    component: dynamic(() => import('../components/tools/remove-duplicate-words')),
    tags: ["clean", "words"],
    Icon: Filter,
    seoTitle: 'Remove Duplicate Words — Online',
    seoDescription: 'Remove repeated words, keeping first occurrence. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Duplicate Words','Remove repeated words, keeping first occurrence.', ["Case-insensitive by default", "Keeps first occurrence", "Handles apostrophes/hyphens"], ['Paste your text','Adjust options','Copy or download'], ["Keyword work", "Text analysis", "Vocabulary review"]),
  }),
  R({
    slug: 'unique-words',
    name: 'Unique Words',
    description: 'List unique words (lowercased, sorted).',
    component: dynamic(() => import('../components/tools/unique-words')),
    tags: ["analyze", "words", "count"],
    Icon: Sigma,
    seoTitle: 'Unique Words — Online',
    seoDescription: 'List unique words (lowercased, sorted). Runs fully in your browser — free and private.',
    Long: makeLong('Unique Words','List unique words (lowercased, sorted).', ["Lowercase & punctuation-stripped", "Sorted alphabetically", "One word per line output"], ['Paste your text','Adjust options','Copy or download'], ["Keyword work", "Text analysis", "Vocabulary review"]),
  }),
  R({
    slug: 'sort-unique-lines',
    name: 'Sort Unique Lines',
    description: 'Unique + alphabetical sort in one step.',
    component: dynamic(() => import('../components/tools/sort-unique-lines')),
    tags: ["lines", "sort", "dedupe"],
    Icon: ListOrdered,
    seoTitle: 'Sort Unique Lines — Online',
    seoDescription: 'Unique + alphabetical sort in one step. Runs fully in your browser — free and private.',
    Long: makeLong('Sort Unique Lines','Unique + alphabetical sort in one step.', ["Removes duplicates, then sorts", "Consistent, tidy output", "Good for lists & configs"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'sort-words',
    name: 'Sort Words',
    description: 'Sort words A→Z.',
    component: dynamic(() => import('../components/tools/sort-words')),
    tags: ["words", "sort"],
    Icon: Type,
    seoTitle: 'Sort Words — Online',
    seoDescription: 'Sort words A→Z. Runs fully in your browser — free and private.',
    Long: makeLong('Sort Words','Sort words A→Z.', ["Locale-aware alphabetical order", "Ignores punctuation", "Optionally unique (combine with Unique Words)"], ['Paste your text','Adjust options','Copy or download'], ["Keyword work", "Text analysis", "Vocabulary review"]),
  }),
  R({
    slug: 'extract-urls',
    name: 'Extract URLs',
    description: 'Find and list all URLs.',
    component: dynamic(() => import('../components/tools/extract-urls')),
    tags: ["extract", "urls"],
    Icon: Link,
    seoTitle: 'Extract URLs — Online',
    seoDescription: 'Find and list all URLs. Runs fully in your browser — free and private.',
    Long: makeLong('Extract URLs','Find and list all URLs.', ["Finds http/https links", "Deduplicates automatically", "Extracts from mixed text"], ['Paste your text','Adjust options','Copy or download'], ["Data scraping", "List building", "Audits"]),
  }),
  R({
    slug: 'extract-emails',
    name: 'Extract Emails',
    description: 'Find and list email addresses.',
    component: dynamic(() => import('../components/tools/extract-emails')),
    tags: ["extract", "emails"],
    Icon: Link,
    seoTitle: 'Extract Emails — Online',
    seoDescription: 'Find and list email addresses. Runs fully in your browser — free and private.',
    Long: makeLong('Extract Emails','Find and list email addresses.', ["Pragmatic email pattern", "Deduplicates addresses", "Skips obvious invalids"], ['Paste your text','Adjust options','Copy or download'], ["Data scraping", "List building", "Audits"]),
  }),
  R({
    slug: 'extract-numbers',
    name: 'Extract Numbers',
    description: 'List all numbers (ints/floats).',
    component: dynamic(() => import('../components/tools/extract-numbers')),
    tags: ["extract", "numbers"],
    Icon: Sigma,
    seoTitle: 'Extract Numbers — Online',
    seoDescription: 'List all numbers (ints/floats). Runs fully in your browser — free and private.',
    Long: makeLong('Extract Numbers','List all numbers (ints/floats).', ["Captures ints, decimals & negatives", "Ignores thousand separators", "Quick numeric scraping"], ['Paste your text','Adjust options','Copy or download'], ["Data scraping", "List building", "Audits"]),
  }),
  R({
    slug: 'extract-hashtags',
    name: 'Extract Hashtags',
    description: 'List unique hashtags (Unicode-aware).',
    component: dynamic(() => import('../components/tools/extract-hashtags')),
    tags: ["extract", "hashtags"],
    Icon: Type,
    seoTitle: 'Extract Hashtags — Online',
    seoDescription: 'List unique hashtags (Unicode-aware). Runs fully in your browser — free and private.',
    Long: makeLong('Extract Hashtags','List unique hashtags (Unicode-aware).', ["Unicode-aware #hashtag scan", "Lowercases & dedupes", "Great for social text"], ['Paste your text','Adjust options','Copy or download'], ["Data scraping", "List building", "Audits"]),
  }),
  R({
    slug: 'find-and-replace',
    name: 'Find & Replace',
    description: 'Simple find/replace with flags.',
    component: dynamic(() => import('../components/tools/find-and-replace')),
    tags: ["search", "replace"],
    Icon: Wand2,
    seoTitle: 'Find & Replace — Online',
    seoDescription: 'Simple find/replace with flags. Runs fully in your browser — free and private.',
    Long: makeLong('Find & Replace','Simple find/replace with flags.', ["Plain-text search", "Replace one or all", "Case-insensitive option"], ['Paste your text','Adjust options','Copy or download'], ["Text cleanup", "Refactors", "Bulk edits"]),
  }),
  R({
    slug: 'regex-replace',
    name: 'Regex Replace',
    description: 'Search/replace using a RegExp.',
    component: dynamic(() => import('../components/tools/regex-replace')),
    tags: ["regex", "replace", "advanced"],
    Icon: Braces,
    seoTitle: 'Regex Replace — Online',
    seoDescription: 'Search/replace using a RegExp. Runs fully in your browser — free and private.',
    Long: makeLong('Regex Replace','Search/replace using a RegExp.', ["JavaScript RegExp support", "Flags: g i m s u y", "Backreferences in replacement"], ['Paste your text','Adjust options','Copy or download'], ["Advanced replaces", "Filtering logs", "Data shaping"]),
  }),
  R({
    slug: 'rot13',
    name: 'ROT13',
    description: 'ROT13 encoder/decoder.',
    component: dynamic(() => import('../components/tools/rot13')),
    tags: ["encode", "cipher"],
    Icon: Braces,
    seoTitle: 'ROT13 — Online',
    seoDescription: 'ROT13 encoder/decoder. Runs fully in your browser — free and private.',
    Long: makeLong('ROT13','ROT13 encoder/decoder.', ["Classic substitution cipher", "Round-trippable decoding", "Good for puzzles & demos"], ['Paste your text','Adjust options','Copy or download'], ["Learning/demos", "Puzzles", "Light obfuscation"]),
  }),
  R({
    slug: 'caesar-cipher',
    name: 'Caesar Cipher',
    description: 'Shift letters by N (classic cipher).',
    component: dynamic(() => import('../components/tools/caesar-cipher')),
    tags: ["encode", "cipher"],
    Icon: Braces,
    seoTitle: 'Caesar Cipher — Online',
    seoDescription: 'Shift letters by N (classic cipher). Runs fully in your browser — free and private.',
    Long: makeLong('Caesar Cipher','Shift letters by N (classic cipher).', ["Classic substitution cipher", "Round-trippable decoding", "Good for puzzles & demos"], ['Paste your text','Adjust options','Copy or download'], ["Learning/demos", "Puzzles", "Light obfuscation"]),
  }),
  R({
    slug: 'morse-code-encode-decode',
    name: 'Morse Code Encode/Decode',
    description: 'Convert text ↔ Morse code.',
    component: dynamic(() => import('../components/tools/morse-code-encode-decode')),
    tags: ["encode", "morse"],
    Icon: Braces,
    seoTitle: 'Morse Code Encode/Decode — Online',
    seoDescription: 'Convert text ↔ Morse code. Runs fully in your browser — free and private.',
    Long: makeLong('Morse Code Encode/Decode','Convert text ↔ Morse code.', ["Letters A\u2013Z & digits 0\u20139", "Text \u2194 Morse mapping", "Slash (/) between words"], ['Paste your text','Adjust options','Copy or download'], ["Education", "Novelty", "Signals"]),
  }),
  R({
    slug: 'csv-to-json',
    name: 'CSV → JSON',
    description: 'Convert simple CSV to JSON array.',
    component: dynamic(() => import('../components/tools/csv-to-json')),
    tags: ["convert", "csv", "json"],
    Icon: Braces,
    seoTitle: 'CSV → JSON — Online',
    seoDescription: 'Convert simple CSV to JSON array. Runs fully in your browser — free and private.',
    Long: makeLong('CSV → JSON','Convert simple CSV to JSON array.', ["First row as headers", "Simple, lightweight parser", "No quoted comma support"], ['Paste your text','Adjust options','Copy or download'], ["Data interchange", "APIs", "Reports"]),
  }),
  R({
    slug: 'json-to-csv',
    name: 'JSON → CSV',
    description: 'Convert JSON array to CSV.',
    component: dynamic(() => import('../components/tools/json-to-csv')),
    tags: ["convert", "json", "csv"],
    Icon: Braces,
    seoTitle: 'JSON → CSV — Online',
    seoDescription: 'Convert JSON array to CSV. Runs fully in your browser — free and private.',
    Long: makeLong('JSON → CSV','Convert JSON array to CSV.', ["Derives headers from keys", "Escapes commas & quotes", "Fast export to CSV"], ['Paste your text','Adjust options','Copy or download'], ["Data interchange", "APIs", "Reports"]),
  }),
  R({
    slug: 'markdown-to-html',
    name: 'Markdown → HTML',
    description: 'Lightweight Markdown to HTML.',
    component: dynamic(() => import('../components/tools/markdown-to-html')),
    tags: ["convert", "markdown", "html"],
    Icon: Braces,
    seoTitle: 'Markdown → HTML — Online',
    seoDescription: 'Lightweight Markdown to HTML. Runs fully in your browser — free and private.',
    Long: makeLong('Markdown → HTML','Lightweight Markdown to HTML.', ["Headings, bold/italic, links", "Paragraph detection", "Simple & safe conversion"], ['Paste your text','Adjust options','Copy or download'], ["Data interchange", "APIs", "Reports"]),
  }),
  R({
    slug: 'html-to-markdown',
    name: 'HTML → Markdown',
    description: 'Simplify HTML into Markdown.',
    component: dynamic(() => import('../components/tools/html-to-markdown')),
    tags: ["convert", "html", "markdown"],
    Icon: Braces,
    seoTitle: 'HTML → Markdown — Online',
    seoDescription: 'Simplify HTML into Markdown. Runs fully in your browser — free and private.',
    Long: makeLong('HTML → Markdown','Simplify HTML into Markdown.', ["h1\u2013h3, strong/em, a, br, p, li", "Removes unknown tags", "Readable Markdown output"], ['Paste your text','Adjust options','Copy or download'], ["Data interchange", "APIs", "Reports"]),
  }),
  R({
    slug: 'remove-duplicate-paragraphs',
    name: 'Remove Duplicate Paragraphs',
    description: 'Dedupe repeated paragraphs.',
    component: dynamic(() => import('../components/tools/remove-duplicate-paragraphs')),
    tags: ["clean", "paragraphs", "dedupe"],
    Icon: ListOrdered,
    seoTitle: 'Remove Duplicate Paragraphs — Online',
    seoDescription: 'Dedupe repeated paragraphs. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Duplicate Paragraphs','Dedupe repeated paragraphs.', ["Blank-line paragraph detection", "Whitespace-trimmed compare", "Preserves gaps between blocks"], ['Paste your text','Adjust options','Copy or download'], ["Long-form editing", "Duplicate detection", "Merging sources"]),
  }),
  R({
    slug: 'invert-case',
    name: 'Invert Case',
    description: 'Swap UPPER↔lower for each letter.',
    component: dynamic(() => import('../components/tools/invert-case')),
    tags: ["case", "transform"],
    Icon: Type,
    seoTitle: 'Invert Case — Online',
    seoDescription: 'Swap UPPER↔lower for each letter. Runs fully in your browser — free and private.',
    Long: makeLong('Invert Case','Swap UPPER↔lower for each letter.', ["Swap lower/upper letters", "Leaves digits/symbols", "Great for stylistic toggles"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'chunk-text',
    name: 'Chunk Text',
    description: 'Split text into fixed-size chunks.',
    component: dynamic(() => import('../components/tools/chunk-text')),
    tags: ["split", "format"],
    Icon: ListOrdered,
    seoTitle: 'Chunk Text — Online',
    seoDescription: 'Split text into fixed-size chunks. Runs fully in your browser — free and private.',
    Long: makeLong('Chunk Text','Split text into fixed-size chunks.', ["Fixed-size chunking", "Custom joiner/separator", "Great for SMS/uploads"], ['Paste your text','Adjust options','Copy or download'], ["SMS/email limits", "Batching uploads", "UI text chunks"]),
  }),
  R({
    slug: 'base32-encode-decode',
    name: 'Base32 Encode/Decode',
    description: 'Convert text to/from Base32.',
    component: dynamic(() => import('../components/tools/base32-encode-decode')),
    tags: ["encode"],
    Icon: Braces,
    seoTitle: 'Base32 Encode/Decode — Online',
    seoDescription: 'Convert text to/from Base32. Runs fully in your browser — free and private.',
    Long: makeLong('Base32 Encode/Decode','Convert text to/from Base32.', ["Encode/decode text safely", "Full Unicode support", "No server roundtrips"], ['Paste your text','Adjust options','Copy or download'], ["Web-safe transport", "Embedding in configs", "Basic interoperability"]),
  }),
  R({
    slug: 'base58-encode-decode',
    name: 'Base58 Encode/Decode',
    description: 'Convert text to/from Base58 (Bitcoin-style).',
    component: dynamic(() => import('../components/tools/base58-encode-decode')),
    tags: ["encode"],
    Icon: Braces,
    seoTitle: 'Base58 Encode/Decode — Online',
    seoDescription: 'Convert text to/from Base58 (Bitcoin-style). Runs fully in your browser — free and private.',
    Long: makeLong('Base58 Encode/Decode','Convert text to/from Base58 (Bitcoin-style).', ["Encode/decode text safely", "Full Unicode support", "No server roundtrips"], ['Paste your text','Adjust options','Copy or download'], ["Web-safe transport", "Embedding in configs", "Basic interoperability"]),
  }),
  R({
    slug: 'checksum-hash',
    name: 'Checksum / Hash',
    description: 'Compute common hashes from text (e.g., MD5/SHA).',
    component: dynamic(() => import('../components/tools/checksum-hash')),
    tags: ["hash", "checksum"],
    Icon: Braces,
    seoTitle: 'Checksum / Hash — Online',
    seoDescription: 'Compute common hashes from text (e.g., MD5/SHA). Runs fully in your browser — free and private.',
    Long: makeLong('Checksum / Hash','Compute common hashes from text (e.g., MD5/SHA).', ["MD5/SHA1/SHA256 (etc.)", "Hex and Base64 output (tool-dependent)", "Fast, offline hashing"], ['Paste your text','Adjust options','Copy or download'], ["Integrity checks", "Fingerprints", "Quick hashing"]),
  }),
  R({
    slug: 'column-extractor',
    name: 'Column Extractor',
    description: 'Extract a specific column from delimited text.',
    component: dynamic(() => import('../components/tools/column-extractor')),
    tags: ["csv", "columns", "extract"],
    Icon: ListOrdered,
    seoTitle: 'Column Extractor — Online',
    seoDescription: 'Extract a specific column from delimited text. Runs fully in your browser — free and private.',
    Long: makeLong('Column Extractor','Extract a specific column from delimited text.', ["Select by index or header", "Custom delimiter", "Trim or keep whitespace"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'csv-dedup',
    name: 'CSV Dedupe',
    description: 'Remove duplicate CSV rows (by whole row or column keys).',
    component: dynamic(() => import('../components/tools/csv-dedup')),
    tags: ["csv", "dedupe"],
    Icon: ListOrdered,
    seoTitle: 'CSV Dedupe — Online',
    seoDescription: 'Remove duplicate CSV rows (by whole row or column keys). Runs fully in your browser — free and private.',
    Long: makeLong('CSV Dedupe','Remove duplicate CSV rows (by whole row or column keys).', ["Remove duplicate rows", "Optionally key by columns", "Keeps first occurrence"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'csv-diff',
    name: 'CSV Diff',
    description: 'Compare two CSVs and see added/removed/changed rows.',
    component: dynamic(() => import('../components/tools/csv-diff')),
    tags: ["csv", "diff", "compare"],
    Icon: Sigma,
    seoTitle: 'CSV Diff — Online',
    seoDescription: 'Compare two CSVs and see added/removed/changed rows. Runs fully in your browser — free and private.',
    Long: makeLong('CSV Diff','Compare two CSVs and see added/removed/changed rows.', ["Added/removed/changed sets", "Header-aware compare", "Line-by-line summary"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'csv-merge',
    name: 'CSV Merge',
    description: 'Merge CSVs by header/columns (inner/left/right).',
    component: dynamic(() => import('../components/tools/csv-merge')),
    tags: ["csv", "merge"],
    Icon: ListOrdered,
    seoTitle: 'CSV Merge — Online',
    seoDescription: 'Merge CSVs by header/columns (inner/left/right). Runs fully in your browser — free and private.',
    Long: makeLong('CSV Merge','Merge CSVs by header/columns (inner/left/right).', ["Inner/left/right joins", "Select join key columns", "Merges headers safely"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'csv-sort',
    name: 'CSV Sort',
    description: 'Sort CSV rows by one or more columns.',
    component: dynamic(() => import('../components/tools/csv-sort')),
    tags: ["csv", "sort"],
    Icon: ListOrdered,
    seoTitle: 'CSV Sort — Online',
    seoDescription: 'Sort CSV rows by one or more columns. Runs fully in your browser — free and private.',
    Long: makeLong('CSV Sort','Sort CSV rows by one or more columns.', ["Sort by one or more columns", "Ascending/descending per column", "Stable sort"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'diacritics-remover',
    name: 'Diacritics Remover',
    description: 'Strip accents/diacritics while keeping base letters.',
    component: dynamic(() => import('../components/tools/diacritics-remover')),
    tags: ["clean", "normalize"],
    Icon: Filter,
    seoTitle: 'Diacritics Remover — Online',
    seoDescription: 'Strip accents/diacritics while keeping base letters. Runs fully in your browser — free and private.',
    Long: makeLong('Diacritics Remover','Strip accents/diacritics while keeping base letters.', ["Normalize to ASCII", "Works on mixed scripts", "Great for search/indexing"], ['Paste your text','Adjust options','Copy or download'], ["Search indexing", "Slug prep", "ASCII only systems"]),
  }),
  R({
    slug: 'epoch-converter',
    name: 'Epoch Converter',
    description: 'Convert UNIX epoch ↔ date-time.',
    component: dynamic(() => import('../components/tools/epoch-converter')),
    tags: ["time", "convert"],
    Icon: Sigma,
    seoTitle: 'Epoch Converter — Online',
    seoDescription: 'Convert UNIX epoch ↔ date-time. Runs fully in your browser — free and private.',
    Long: makeLong('Epoch Converter','Convert UNIX epoch ↔ date-time.', ["Epoch \u2194 human date", "Handles seconds/ms", "Local time preview"], ['Paste your text','Adjust options','Copy or download'], ["APIs & logs", "DB timestamps", "Human-readable output"]),
  }),
  R({
    slug: 'hmac-generator',
    name: 'HMAC Generator',
    description: 'Compute HMAC signatures for text (choose hash).',
    component: dynamic(() => import('../components/tools/hmac-generator')),
    tags: ["hash", "security"],
    Icon: Braces,
    seoTitle: 'HMAC Generator — Online',
    seoDescription: 'Compute HMAC signatures for text (choose hash). Runs fully in your browser — free and private.',
    Long: makeLong('HMAC Generator','Compute HMAC signatures for text (choose hash).', ["Choose SHA-256/384/512", "Hex/Base64 signature", "Key never leaves browser"], ['Paste your text','Adjust options','Copy or download'], ["Webhook signing", "API auth testing", "Security demos"]),
  }),
  R({
    slug: 'html-entities',
    name: 'HTML Entities',
    description: 'Encode/decode HTML entities (&, <, etc).',
    component: dynamic(() => import('../components/tools/html-entities')),
    tags: ["html", "encode"],
    Icon: Braces,
    seoTitle: 'HTML Entities — Online',
    seoDescription: 'Encode/decode HTML entities (&, <, etc). Runs fully in your browser — free and private.',
    Long: makeLong('HTML Entities','Encode/decode HTML entities (&, <, etc).', ["Encode & decode", "Handle common entities", "Great for HTML snippets"], ['Paste your text','Adjust options','Copy or download'], ["CMS copy/paste", "Email to plain text", "Snippet cleanup"]),
  }),
  R({
    slug: 'iban-validator',
    name: 'IBAN Validator',
    description: 'Validate International Bank Account Numbers.',
    component: dynamic(() => import('../components/tools/iban-validator')),
    tags: ["validate"],
    Icon: Sigma,
    seoTitle: 'IBAN Validator — Online',
    seoDescription: 'Validate International Bank Account Numbers. Runs fully in your browser — free and private.',
    Long: makeLong('IBAN Validator','Validate International Bank Account Numbers.', ["Validates IBAN checksum", "Supports many countries", "Upper/lower agnostic"], ['Paste your text','Adjust options','Copy or download'], ["Finance forms", "Onboarding", "Batch checks"]),
  }),
  R({
    slug: 'json-diff',
    name: 'JSON Diff',
    description: 'Compare two JSON blobs and highlight differences.',
    component: dynamic(() => import('../components/tools/json-diff')),
    tags: ["json", "diff", "compare"],
    Icon: Braces,
    seoTitle: 'JSON Diff — Online',
    seoDescription: 'Compare two JSON blobs and highlight differences. Runs fully in your browser — free and private.',
    Long: makeLong('JSON Diff','Compare two JSON blobs and highlight differences.', ["Pretty side-by-side diff", "Highlights added/removed/changed", "Helpful for configs/APIs"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'json-xml',
    name: 'JSON ↔ XML',
    description: 'Convert JSON to XML and back (simple mappings).',
    component: dynamic(() => import('../components/tools/json-xml')),
    tags: ["json", "xml", "convert"],
    Icon: Braces,
    seoTitle: 'JSON ↔ XML — Online',
    seoDescription: 'Convert JSON to XML and back (simple mappings). Runs fully in your browser — free and private.',
    Long: makeLong('JSON ↔ XML','Convert JSON to XML and back (simple mappings).', ["Simple mapping (objects\u2192elements)", "Attributes not preserved (simple mode)", "Good for quick transforms"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'json-yaml',
    name: 'JSON ↔ YAML',
    description: 'Convert JSON to YAML and back.',
    component: dynamic(() => import('../components/tools/json-yaml')),
    tags: ["json", "yaml", "convert"],
    Icon: Braces,
    seoTitle: 'JSON ↔ YAML — Online',
    seoDescription: 'Convert JSON to YAML and back. Runs fully in your browser — free and private.',
    Long: makeLong('JSON ↔ YAML','Convert JSON to YAML and back.', ["Lossless for common cases", "Compact or pretty styles", "Round-trip friendly"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'jwt-decode',
    name: 'JWT Decode',
    description: 'Decode JSON Web Tokens (header/payload).',
    component: dynamic(() => import('../components/tools/jwt-decode')),
    tags: ["jwt", "decode"],
    Icon: Braces,
    seoTitle: 'JWT Decode — Online',
    seoDescription: 'Decode JSON Web Tokens (header/payload). Runs fully in your browser — free and private.',
    Long: makeLong('JWT Decode','Decode JSON Web Tokens (header/payload).', ["Decode header & payload", "No secret required", "Base64URL handling"], ['Paste your text','Adjust options','Copy or download'], ["Debugging JWTs", "Learning structure", "Inspect claims"]),
  }),
  R({
    slug: 'lorem-ipsum-pro',
    name: 'Lorem Ipsum Pro',
    description: 'Generate paragraphs, lists, and titles of lorem ipsum.',
    component: dynamic(() => import('../components/tools/lorem-ipsum-pro')),
    tags: ["generate", "text"],
    Icon: Type,
    seoTitle: 'Lorem Ipsum Pro — Online',
    seoDescription: 'Generate paragraphs, lists, and titles of lorem ipsum. Runs fully in your browser — free and private.',
    Long: makeLong('Lorem Ipsum Pro','Generate paragraphs, lists, and titles of lorem ipsum.', ["Paragraphs, sentences, lists", "Adjust length & style", "Copy/download output"], ['Paste your text','Adjust options','Copy or download'], ["Design mocks", "Drafts", "Placeholders"]),
  }),
  R({
    slug: 'luhn-validator',
    name: 'Luhn Validator',
    description: 'Check numbers using the Luhn checksum (cards/IDs).',
    component: dynamic(() => import('../components/tools/luhn-validator')),
    tags: ["validate", "numbers"],
    Icon: Sigma,
    seoTitle: 'Luhn Validator — Online',
    seoDescription: 'Check numbers using the Luhn checksum (cards/IDs). Runs fully in your browser — free and private.',
    Long: makeLong('Luhn Validator','Check numbers using the Luhn checksum (cards/IDs).', ["Instant pass/fail result", "Explains checksum steps", "Great for test data"], ['Paste your text','Adjust options','Copy or download'], ["Form validation", "Test data", "Education"]),
  }),
  R({
    slug: 'mime-type-by-extension',
    name: 'MIME Type by Extension',
    description: 'Lookup MIME type from a file extension.',
    component: dynamic(() => import('../components/tools/mime-type-by-extension')),
    tags: ["lookup", "mime"],
    Icon: Braces,
    seoTitle: 'MIME Type by Extension — Online',
    seoDescription: 'Lookup MIME type from a file extension. Runs fully in your browser — free and private.',
    Long: makeLong('MIME Type by Extension','Lookup MIME type from a file extension.', ["Common extension map", "Search by .ext", "Add to clipboard quickly"], ['Paste your text','Adjust options','Copy or download'], ["HTTP headers", "Upload validation", "Dev tools"]),
  }),
  R({
    slug: 'random-password',
    name: 'Random Password',
    description: 'Generate strong random passwords.',
    component: dynamic(() => import('../components/tools/random-password')),
    tags: ["generate", "security"],
    Icon: Wand2,
    seoTitle: 'Random Password — Online',
    seoDescription: 'Generate strong random passwords. Runs fully in your browser — free and private.',
    Long: makeLong('Random Password','Generate strong random passwords.', ["Length & charset controls", "Exclude ambiguous chars", "Copy-on-click"], ['Paste your text','Adjust options','Copy or download'], ["Accounts", "Vaults", "Staging creds"]),
  }),
  R({
    slug: 'regex-tester',
    name: 'Regex Tester',
    description: 'Test JavaScript regular expressions on your text.',
    component: dynamic(() => import('../components/tools/regex-tester')),
    tags: ["regex", "test"],
    Icon: Braces,
    seoTitle: 'Regex Tester — Online',
    seoDescription: 'Test JavaScript regular expressions on your text. Runs fully in your browser — free and private.',
    Long: makeLong('Regex Tester','Test JavaScript regular expressions on your text.', ["Real-time match preview", "Flags toggle", "Group capture listing"], ['Paste your text','Adjust options','Copy or download'], ["Advanced replaces", "Filtering logs", "Data shaping"]),
  }),
  R({
    slug: 'unicode-normalizer',
    name: 'Unicode Normalizer',
    description: 'Normalize text to NFC/NFD/NFKC/NFKD.',
    component: dynamic(() => import('../components/tools/unicode-normalizer')),
    tags: ["clean", "unicode"],
    Icon: Filter,
    seoTitle: 'Unicode Normalizer — Online',
    seoDescription: 'Normalize text to NFC/NFD/NFKC/NFKD. Runs fully in your browser — free and private.',
    Long: makeLong('Unicode Normalizer','Normalize text to NFC/NFD/NFKC/NFKD.', ["NFC/NFD/NFKC/NFKD modes", "Fix visually identical glyphs", "Great before diffing"], ['Paste your text','Adjust options','Copy or download'], ["Normalization", "Deduplication", "Comparisons"]),
  }),
  R({
    slug: 'url-parser',
    name: 'URL Parser',
    description: 'Break a URL into parts (protocol, host, path, query).',
    component: dynamic(() => import('../components/tools/url-parser')),
    tags: ["url", "parse"],
    Icon: Link,
    seoTitle: 'URL Parser — Online',
    seoDescription: 'Break a URL into parts (protocol, host, path, query). Runs fully in your browser — free and private.',
    Long: makeLong('URL Parser','Break a URL into parts (protocol, host, path, query).', ["Protocol/host/path/query", "Breaks query to pairs", "Edit & rebuild URL"], ['Paste your text','Adjust options','Copy or download'], ["Debugging links", "Analytics", "Routing"]),
  }),
  R({
    slug: 'uuid-generator',
    name: 'UUID Generator',
    description: 'Generate UUIDs (v4).',
    component: dynamic(() => import('../components/tools/uuid-generator')),
    tags: ["generate", "ids"],
    Icon: Wand2,
    seoTitle: 'UUID Generator — Online',
    seoDescription: 'Generate UUIDs (v4). Runs fully in your browser — free and private.',
    Long: makeLong('UUID Generator','Generate UUIDs (v4).', ["UUID v4 generation", "Bulk list support", "Copy one-per-line"], ['Paste your text','Adjust options','Copy or download'], ["IDs in databases", "Logs", "Test fixtures"]),
  }),
  R({
    slug: 'ascii85-encode-decode',
    name: 'Ascii85 Encode/Decode',
    description: 'Convert text to/from Ascii85 (Base85).',
    component: dynamic(() => import('../components/tools/ascii85-encode-decode')),
    tags: ["encode"],
    Icon: Braces,
    seoTitle: 'Ascii85 Encode/Decode — Online',
    seoDescription: 'Convert text to/from Ascii85 (Base85). Runs fully in your browser — free and private.',
    Long: makeLong('Ascii85 Encode/Decode','Convert text to/from Ascii85 (Base85).', ["Encode/decode text safely", "Full Unicode support", "No server roundtrips"], ['Paste your text','Adjust options','Copy or download'], ["Web-safe transport", "Embedding in configs", "Basic interoperability"]),
  }),
  R({
    slug: 'quoted-printable-encode-decode',
    name: 'Quoted-Printable Encode/Decode',
    description: 'Encode/decode quoted-printable (email-safe) text.',
    component: dynamic(() => import('../components/tools/quoted-printable-encode-decode')),
    tags: ["encode", "email"],
    Icon: Braces,
    seoTitle: 'Quoted-Printable Encode/Decode — Online',
    seoDescription: 'Encode/decode quoted-printable (email-safe) text. Runs fully in your browser — free and private.',
    Long: makeLong('Quoted-Printable Encode/Decode','Encode/decode quoted-printable (email-safe) text.', ["Soft line breaks (=\\r\\n)", "Encodes non-printables", "Email-safe output"], ['Paste your text','Adjust options','Copy or download'], ["Email transport", "MIME bodies", "Quoted content"]),
  }),
  R({
    slug: 'json-minify',
    name: 'JSON Minify',
    description: 'Remove whitespace/comments from JSON.',
    component: dynamic(() => import('../components/tools/json-minify')),
    tags: ["json", "minify"],
    Icon: Braces,
    seoTitle: 'JSON Minify — Online',
    seoDescription: 'Remove whitespace/comments from JSON. Runs fully in your browser — free and private.',
    Long: makeLong('JSON Minify','Remove whitespace/comments from JSON.', ["Removes whitespace", "Preserves string content", "Great for payloads"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'json-pretty',
    name: 'JSON Pretty',
    description: 'Pretty-print JSON with indentation.',
    component: dynamic(() => import('../components/tools/json-pretty')),
    tags: ["json", "format"],
    Icon: Braces,
    seoTitle: 'JSON Pretty — Online',
    seoDescription: 'Pretty-print JSON with indentation. Runs fully in your browser — free and private.',
    Long: makeLong('JSON Pretty','Pretty-print JSON with indentation.', ["2-space indentation", "Stable key order per input", "Easier to diff"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'xml-pretty-minify',
    name: 'XML Pretty/Minify',
    description: 'Beautify or minify XML code.',
    component: dynamic(() => import('../components/tools/xml-pretty-minify')),
    tags: ["xml", "format", "minify"],
    Icon: Braces,
    seoTitle: 'XML Pretty/Minify — Online',
    seoDescription: 'Beautify or minify XML code. Runs fully in your browser — free and private.',
    Long: makeLong('XML Pretty/Minify','Beautify or minify XML code.', ["Parser error detection", "Pretty or compact modes", "Indent control (2 spaces)"], ['Paste your text','Adjust options','Copy or download'], ["Configs", "RSS/Atom", "Interchange"]),
  }),
  R({
    slug: 'html-pretty-minify',
    name: 'HTML Pretty/Minify',
    description: 'Beautify or minify HTML.',
    component: dynamic(() => import('../components/tools/html-pretty-minify')),
    tags: ["html", "format", "minify"],
    Icon: Braces,
    seoTitle: 'HTML Pretty/Minify — Online',
    seoDescription: 'Beautify or minify HTML. Runs fully in your browser — free and private.',
    Long: makeLong('HTML Pretty/Minify','Beautify or minify HTML.', ["Removes comments on minify", "Pretty prints nested tags", "Basic sanitizer"], ['Paste your text','Adjust options','Copy or download'], ["CMS copy/paste", "Email to plain text", "Snippet cleanup"]),
  }),
  R({
    slug: 'css-minify',
    name: 'CSS Minify',
    description: 'Minify CSS by stripping whitespace/comments.',
    component: dynamic(() => import('../components/tools/css-minify')),
    tags: ["css", "minify"],
    Icon: Braces,
    seoTitle: 'CSS Minify — Online',
    seoDescription: 'Minify CSS by stripping whitespace/comments. Runs fully in your browser — free and private.',
    Long: makeLong('CSS Minify','Minify CSS by stripping whitespace/comments.', ["Strip comments & spaces", "Compress : ; { }", "Removes trailing semicolons"], ['Paste your text','Adjust options','Copy or download'], ["Frontend dev", "Themes", "Inlining"]),
  }),
  R({
    slug: 'js-minify',
    name: 'JS Minify (Simple)',
    description: 'Lightweight JavaScript minifier (basic).',
    component: dynamic(() => import('../components/tools/js-minify')),
    tags: ["js", "minify"],
    Icon: Braces,
    seoTitle: 'JS Minify (Simple) — Online',
    seoDescription: 'Lightweight JavaScript minifier (basic). Runs fully in your browser — free and private.',
    Long: makeLong('JS Minify (Simple)','Lightweight JavaScript minifier (basic).', ["Remove comments/whitespace", "Compact around operators", "Quick inline minify"], ['Paste your text','Adjust options','Copy or download'], ["Snippets", "Bookmarklets", "Embeds"]),
  }),
  R({
    slug: 'snake-case',
    name: 'snake_case',
    description: 'Convert text to snake_case.',
    component: dynamic(() => import('../components/tools/snake-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'snake_case — Online',
    seoDescription: 'Convert text to snake_case. Runs fully in your browser — free and private.',
    Long: makeLong('snake_case','Convert text to snake_case.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'kebab-case',
    name: 'kebab-case',
    description: 'Convert text to kebab-case.',
    component: dynamic(() => import('../components/tools/kebab-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'kebab-case — Online',
    seoDescription: 'Convert text to kebab-case. Runs fully in your browser — free and private.',
    Long: makeLong('kebab-case','Convert text to kebab-case.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'camel-case',
    name: 'camelCase',
    description: 'Convert text to camelCase.',
    component: dynamic(() => import('../components/tools/camel-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'camelCase — Online',
    seoDescription: 'Convert text to camelCase. Runs fully in your browser — free and private.',
    Long: makeLong('camelCase','Convert text to camelCase.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'pascal-case',
    name: 'PascalCase',
    description: 'Convert text to PascalCase.',
    component: dynamic(() => import('../components/tools/pascal-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'PascalCase — Online',
    seoDescription: 'Convert text to PascalCase. Runs fully in your browser — free and private.',
    Long: makeLong('PascalCase','Convert text to PascalCase.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'dot-case',
    name: 'dot.case',
    description: 'Convert text to dot.case.',
    component: dynamic(() => import('../components/tools/dot-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'dot.case — Online',
    seoDescription: 'Convert text to dot.case. Runs fully in your browser — free and private.',
    Long: makeLong('dot.case','Convert text to dot.case.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'path-case',
    name: 'path/case',
    description: 'Convert text to path/case.',
    component: dynamic(() => import('../components/tools/path-case')),
    tags: ["case", "convert"],
    Icon: Type,
    seoTitle: 'path/case — Online',
    seoDescription: 'Convert text to path/case. Runs fully in your browser — free and private.',
    Long: makeLong('path/case','Convert text to path/case.', ["Tokenizes identifiers", "Handles camel/Pascal input", "ASCII diacritics stripped"], ['Paste your text','Adjust options','Copy or download'], ["Headings & labels", "Normalization before compare", "Consistent naming"]),
  }),
  R({
    slug: 'ulid-generator',
    name: 'ULID Generator',
    description: 'Generate ULIDs (time-sortable IDs).',
    component: dynamic(() => import('../components/tools/ulid-generator')),
    tags: ["generate", "ids"],
    Icon: Wand2,
    seoTitle: 'ULID Generator — Online',
    seoDescription: 'Generate ULIDs (time-sortable IDs). Runs fully in your browser — free and private.',
    Long: makeLong('ULID Generator','Generate ULIDs (time-sortable IDs).', ["Time-sortable IDs", "Crockford Base32 alphabet", "Generate many at once"], ['Paste your text','Adjust options','Copy or download'], ["General text processing", "Scripting workflows", "Everyday editing"]),
  }),
  R({
    slug: 'pbkdf2',
    name: 'PBKDF2 Derivation',
    description: 'Derive a key from password+salt (SHA-256/384/512).',
    component: dynamic(() => import('../components/tools/pbkdf2')),
    tags: ["security", "hash"],
    Icon: Braces,
    seoTitle: 'PBKDF2 Derivation — Online',
    seoDescription: 'Derive a key from password+salt (SHA-256/384/512). Runs fully in your browser — free and private.',
    Long: makeLong('PBKDF2 Derivation','Derive a key from password+salt (SHA-256/384/512).', ["Salt + iterations", "SHA-256/384/512 options", "Hex output of desired length"], ['Paste your text','Adjust options','Copy or download'], ["General text processing", "Scripting workflows", "Everyday editing"]),
  }),
  R({
    slug: 'json-path-extract',
    name: 'JSON Path Extract',
    description: 'Extract a value from JSON by path (a.b[0].c).',
    component: dynamic(() => import('../components/tools/json-path-extract')),
    tags: ["json", "extract"],
    Icon: Braces,
    seoTitle: 'JSON Path Extract — Online',
    seoDescription: 'Extract a value from JSON by path (a.b[0].c). Runs fully in your browser — free and private.',
    Long: makeLong('JSON Path Extract','Extract a value from JSON by path (a.b[0].c).', ["a.b[0].c style paths", "Array index support", "Pretty JSON output"], ['Paste your text','Adjust options','Copy or download'], ["APIs", "Configs", "Storage"]),
  }),
  R({
    slug: 'query-string-builder',
    name: 'Query String Builder/Parser',
    description: 'Build a query string from lines or parse an existing one.',
    component: dynamic(() => import('../components/tools/query-string-builder-parser')),
    tags: ["url", "query"],
    Icon: Link,
    seoTitle: 'Query String Builder/Parser — Online',
    seoDescription: 'Build a query string from lines or parse an existing one. Runs fully in your browser — free and private.',
    Long: makeLong('Query String Builder/Parser','Build a query string from lines or parse an existing one.', ["Build from lines", "Parse ?a=1&b=2", "URLSearchParams-based"], ['Paste your text','Adjust options','Copy or download'], ["General text processing", "Scripting workflows", "Everyday editing"]),
  }),
  R({
    slug: 'keep-lines-matching',
    name: 'Keep Lines Matching (Regex)',
    description: 'Keep only lines that match a regex.',
    component: dynamic(() => import('../components/tools/keep-lines-matching-regex')),
    tags: ["regex", "lines", "filter"],
    Icon: Filter,
    seoTitle: 'Keep Lines Matching (Regex) — Online',
    seoDescription: 'Keep only lines that match a regex. Runs fully in your browser — free and private.',
    Long: makeLong('Keep Lines Matching (Regex)','Keep only lines that match a regex.', ["Keep only matching lines", "JS regex syntax", "Flags: g i m s u y"], ['Paste your text','Adjust options','Copy or download'], ["Advanced replaces", "Filtering logs", "Data shaping"]),
  }),
  R({
    slug: 'remove-lines-matching',
    name: 'Remove Lines Matching (Regex)',
    description: 'Drop lines that match a regex.',
    component: dynamic(() => import('../components/tools/remove-lines-matching-regex')),
    tags: ["regex", "lines", "filter"],
    Icon: Filter,
    seoTitle: 'Remove Lines Matching (Regex) — Online',
    seoDescription: 'Drop lines that match a regex. Runs fully in your browser — free and private.',
    Long: makeLong('Remove Lines Matching (Regex)','Drop lines that match a regex.', ["Remove matching lines", "JS regex syntax", "Flags: g i m s u y"], ['Paste your text','Adjust options','Copy or download'], ["Advanced replaces", "Filtering logs", "Data shaping"]),
  }),
  R({
    slug: 'sort-lines-by-length',
    name: 'Sort Lines by Length',
    description: 'Order lines shortest → longest (or reverse).',
    component: dynamic(() => import('../components/tools/sort-lines-by-length')),
    tags: ["lines", "sort"],
    Icon: ListOrdered,
    seoTitle: 'Sort Lines by Length — Online',
    seoDescription: 'Order lines shortest → longest (or reverse). Runs fully in your browser — free and private.',
    Long: makeLong('Sort Lines by Length','Order lines shortest → longest (or reverse).', ["Ascending or descending", "Ties keep original order", "Great for summaries"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'pad-lines',
    name: 'Pad Lines',
    description: 'Pad each line left/right to a target width.',
    component: dynamic(() => import('../components/tools/pad-lines')),
    tags: ["lines", "format"],
    Icon: ListOrdered,
    seoTitle: 'Pad Lines — Online',
    seoDescription: 'Pad each line left/right to a target width. Runs fully in your browser — free and private.',
    Long: makeLong('Pad Lines','Pad each line left/right to a target width.', ["Left or right pad", "Any pad char", "Fixed width tables"], ['Paste your text','Adjust options','Copy or download'], ["Logs & transcripts", "Lists & inventories", "Config files"]),
  }),
  R({
    slug: 'csv-to-markdown-table',
    name: 'CSV → Markdown Table',
    description: 'Turn CSV into a Markdown table.',
    component: dynamic(() => import('../components/tools/csv-to-markdown-table')),
    tags: ["csv", "markdown", "convert"],
    Icon: Braces,
    seoTitle: 'CSV → Markdown Table — Online',
    seoDescription: 'Turn CSV into a Markdown table. Runs fully in your browser — free and private.',
    Long: makeLong('CSV → Markdown Table','Turn CSV into a Markdown table.', ["Auto column widths", "Header separator row", "Paste-ready Markdown"], ['Paste your text','Adjust options','Copy or download'], ["Spreadsheets", "Data cleaning", "Reports"]),
  }),
  R({
    slug: 'domain-extractor',
    name: 'Domain Extractor',
    description: 'Extract unique hostnames from URLs.',
    component: dynamic(() => import('../components/tools/domain-extractor')),
    tags: ["url", "extract"],
    Icon: Link,
    seoTitle: 'Domain Extractor — Online',
    seoDescription: 'Extract unique hostnames from URLs. Runs fully in your browser — free and private.',
    Long: makeLong('Domain Extractor','Extract unique hostnames from URLs.', ["Extract hostnames only", "Deduplicates results", "Validates URLs safely"], ['Paste your text','Adjust options','Copy or download'], ["Audits", "Blocklists", "Whitelists"]),
  }),
  R({
    slug: 'emoji-remover',
    name: 'Emoji Remover',
    description: 'Remove emoji/pictographs from text.',
    component: dynamic(() => import('../components/tools/emoji-remover')),
    tags: ["clean", "emoji"],
    Icon: Filter,
    seoTitle: 'Emoji Remover — Online',
    seoDescription: 'Remove emoji/pictographs from text. Runs fully in your browser — free and private.',
    Long: makeLong('Emoji Remover','Remove emoji/pictographs from text.', ["Removes pictographs & ZWJ", "Keeps normal text", "Great for logs & exports"], ['Paste your text','Adjust options','Copy or download'], ["Data exports", "Search indexing", "Cleaner logs"]),
  }),
];

/* ----------------- Exports ----------------- */
export function getAllTools(){ return registry; }
export function getToolBySlug(slug){ return registry.find(t=>t.slug===slug); }
export function getRelatedTools(slug){
  const me = getToolBySlug(slug); if (!me) return [];
  const score = t => (t.slug===slug? -1 : t.tags.filter(x=>me.tags.includes(x)).length);
  return [...registry].sort((a,b)=>score(b)-score(a)).filter(t=>t.slug!==slug);
}
export default registry;
